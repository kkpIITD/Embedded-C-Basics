
delay_int.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  00000158  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  00000158  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000032  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000000ae  00000000  00000000  000001aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000007b  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000000b5  00000000  00000000  000002d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000030  00000000  00000000  00000388  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000089  00000000  00000000  000003b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__vector_8>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 70 00 	jmp	0xe0	; 0xe0 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
volatile int cnt=0;

int main()
{
	int i=0;
	sbi(DDRC,0);
  7c:	a0 9a       	sbi	0x14, 0	; 20
	
	
	TCCR1A=(1<<COM1A1);
  7e:	80 e8       	ldi	r24, 0x80	; 128
  80:	8f bd       	out	0x2f, r24	; 47
	TCCR1B=(1<<CS10);
  82:	81 e0       	ldi	r24, 0x01	; 1
  84:	8e bd       	out	0x2e, r24	; 46
	TIMSK|=(1<<TOIE1);
  86:	89 b7       	in	r24, 0x39	; 57
  88:	84 60       	ori	r24, 0x04	; 4
  8a:	89 bf       	out	0x39, r24	; 57
	sei();
  8c:	78 94       	sei
	
	
	while(1)
	{
		while((cnt/227)==0);
			PORTC^=(1<<0);
  8e:	21 e0       	ldi	r18, 0x01	; 1
	sei();
	
	
	while(1)
	{
		while((cnt/227)==0);
  90:	80 91 60 00 	lds	r24, 0x0060
  94:	90 91 61 00 	lds	r25, 0x0061
  98:	8e 51       	subi	r24, 0x1E	; 30
  9a:	9f 4f       	sbci	r25, 0xFF	; 255
  9c:	85 5c       	subi	r24, 0xC5	; 197
  9e:	91 40       	sbci	r25, 0x01	; 1
  a0:	b8 f3       	brcs	.-18     	; 0x90 <main+0x14>
			PORTC^=(1<<0);
  a2:	85 b3       	in	r24, 0x15	; 21
  a4:	82 27       	eor	r24, r18
  a6:	85 bb       	out	0x15, r24	; 21
			cnt=0;
  a8:	10 92 61 00 	sts	0x0061, r1
  ac:	10 92 60 00 	sts	0x0060, r1
  b0:	ef cf       	rjmp	.-34     	; 0x90 <main+0x14>

000000b2 <__vector_8>:
	}
	
}

ISR(TIMER1_OVF_vect)
{
  b2:	1f 92       	push	r1
  b4:	0f 92       	push	r0
  b6:	0f b6       	in	r0, 0x3f	; 63
  b8:	0f 92       	push	r0
  ba:	11 24       	eor	r1, r1
  bc:	8f 93       	push	r24
  be:	9f 93       	push	r25
	cnt++;
  c0:	80 91 60 00 	lds	r24, 0x0060
  c4:	90 91 61 00 	lds	r25, 0x0061
  c8:	01 96       	adiw	r24, 0x01	; 1
  ca:	90 93 61 00 	sts	0x0061, r25
  ce:	80 93 60 00 	sts	0x0060, r24
	//PORTC^=(1<<0);
  d2:	9f 91       	pop	r25
  d4:	8f 91       	pop	r24
  d6:	0f 90       	pop	r0
  d8:	0f be       	out	0x3f, r0	; 63
  da:	0f 90       	pop	r0
  dc:	1f 90       	pop	r1
  de:	18 95       	reti

000000e0 <_exit>:
  e0:	f8 94       	cli

000000e2 <__stop_program>:
  e2:	ff cf       	rjmp	.-2      	; 0xe2 <__stop_program>
