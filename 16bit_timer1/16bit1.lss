
16bit1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000118  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000083  00000000  00000000  00000133  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000004e  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000c2  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000002c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000078  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000028  00000000  00000000  00000360  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:


int main()
{
	int i=0;
	sbi(DDRC,0);
  6c:	a0 9a       	sbi	0x14, 0	; 20
	
	
	while(1)
	{
		PORTC^=(1<<0);
  6e:	71 e0       	ldi	r23, 0x01	; 1
		{
			TCCR1A=(1<<COM1A1);
			TCCR1B=(1<<WGM12)|(1<<CS10);
			TCNT1=12;
			while(!(TIFR&(1<<TOV1)));
			TIFR=0b00000100;
  70:	64 e0       	ldi	r22, 0x04	; 4
	{
		PORTC^=(1<<0);
		
		for(i=0;i<227;i++)
		{
			TCCR1A=(1<<COM1A1);
  72:	50 e8       	ldi	r21, 0x80	; 128
			TCCR1B=(1<<WGM12)|(1<<CS10);
  74:	49 e0       	ldi	r20, 0x09	; 9
			TCNT1=12;
  76:	2c e0       	ldi	r18, 0x0C	; 12
  78:	30 e0       	ldi	r19, 0x00	; 0
	sbi(DDRC,0);
	
	
	while(1)
	{
		PORTC^=(1<<0);
  7a:	85 b3       	in	r24, 0x15	; 21
  7c:	87 27       	eor	r24, r23
  7e:	85 bb       	out	0x15, r24	; 21
  80:	80 e0       	ldi	r24, 0x00	; 0
  82:	90 e0       	ldi	r25, 0x00	; 0
		
		for(i=0;i<227;i++)
		{
			TCCR1A=(1<<COM1A1);
  84:	5f bd       	out	0x2f, r21	; 47
			TCCR1B=(1<<WGM12)|(1<<CS10);
  86:	4e bd       	out	0x2e, r20	; 46
			TCNT1=12;
  88:	3d bd       	out	0x2d, r19	; 45
  8a:	2c bd       	out	0x2c, r18	; 44
			while(!(TIFR&(1<<TOV1)));
  8c:	08 b6       	in	r0, 0x38	; 56
  8e:	02 fe       	sbrs	r0, 2
  90:	fd cf       	rjmp	.-6      	; 0x8c <main+0x20>
			TIFR=0b00000100;
  92:	68 bf       	out	0x38, r22	; 56
			TCCR1B=0;
  94:	1e bc       	out	0x2e, r1	; 46
	
	while(1)
	{
		PORTC^=(1<<0);
		
		for(i=0;i<227;i++)
  96:	01 96       	adiw	r24, 0x01	; 1
  98:	83 3e       	cpi	r24, 0xE3	; 227
  9a:	91 05       	cpc	r25, r1
  9c:	99 f7       	brne	.-26     	; 0x84 <main+0x18>
  9e:	ed cf       	rjmp	.-38     	; 0x7a <main+0xe>

000000a0 <_exit>:
  a0:	f8 94       	cli

000000a2 <__stop_program>:
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <__stop_program>
